name: Random Weekly Commits

on:
  schedule:
    - cron: "0 12 * * 1"  # Runs every Monday to shuffle commit days
    - cron: "0 12 * * *"  # Runs daily but commits only on selected days
  workflow_dispatch:

jobs:
  shuffle_days:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Select 4 Random Commit Days
        id: select-days
        run: |
          DAYS=$(shuf -i 1-7 -n 4 | tr '\n' ' ')
          echo "days=$DAYS" >> $GITHUB_ENV
          echo "$DAYS" > commit_days.txt

      - name: Save Days to Repository
        run: |
          git config --global user.name "YourGitHubUsername"
          git config --global user.email "your-email@example.com"
          git add commit_days.txt
          git commit -m "Updated commit schedule for the week" || exit 0
          git pull --rebase origin main || true
          git push origin main || true

  commit:
    needs: shuffle_days
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Load Selected Commit Days
        run: |
          COMMIT_DAYS=$(cat commit_days.txt)
          TODAY=$(date +%u)
          echo "Today's day: $TODAY"
          echo "Commit days: $COMMIT_DAYS"

          if echo "$COMMIT_DAYS" | grep -qw "$TODAY"; then
            echo "âœ… Today is a commit day!"
          else
            echo "ðŸš« Skipping commit today!"
            exit 0
          fi

      - name: Configure Git
        run: |
          git config --global user.name "YourGitHubUsername"
          git config --global user.email "your-email@example.com"

      - name: Commit Changes
        run: |
          echo "$(date)" >> hello.py
          echo "$(date)" >> hello.php
          git add .
          git commit -m "Random commit on $(date)" || exit 0

      - name: Pull Latest Changes with Rebase
        run: |
          git config --global pull.rebase true
          git pull --rebase origin main || true

      - name: Push Changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git push origin main || true
